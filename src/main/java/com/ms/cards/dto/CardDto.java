package com.ms.cards.dto;

import com.ms.restUtilities.dto.ValidationGroups;
import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Null;
import jakarta.validation.constraints.Positive;
import lombok.Getter;
import lombok.Setter;

import java.math.BigDecimal;

@Getter
@Setter
public class CardDto {
    @Null(message = "Id for card is generated by the api")
    private Long id;

    @Null(message = "Card number is generated by the api")
    private String cardNumber;

    @Null(groups = ValidationGroups.UpdateGroup.class, message = "Customer id cannot be updated")
    @NotNull(groups = ValidationGroups.CreationGroup.class, message = "Customer id is mandatory for card creation")
    private Long customerId;

    @Null(groups = ValidationGroups.UpdateGroup.class, message = "Card type cannot be updated")
    @NotEmpty(groups = ValidationGroups.CreationGroup.class, message = "Card type is required for creating a card")
    private String type;

    @Positive(groups = ValidationGroups.CreationGroup.class, message = "Total limit should be positive")
    @NotNull(groups = ValidationGroups.CreationGroup.class, message = "Total limit is required for creating a card")
    private BigDecimal totalLimit;

    @Null(groups = ValidationGroups.UpdateGroup.class, message = "Amount used is not overrideable")
    @Null(groups = ValidationGroups.CreationGroup.class, message = "Amount used is not set for card creation")
    private BigDecimal amountUsed;

    @Null(message = "Available amount is not overrideable")
    private BigDecimal availableAmount;
}
